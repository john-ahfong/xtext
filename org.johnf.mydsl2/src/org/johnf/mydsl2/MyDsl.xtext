grammar org.johnf.mydsl2.MyDsl with org.eclipse.xtext.common.Terminals

generate myDsl "http://www.johnf.org/MyDsl"

import "http://www.eclipse.org/emf/2002/Ecore" as ecore

Model:
	'workspace' name=ID ';'
	('description' description=STRING ';')?
	(	
			dataTypes+=(Entity)
	)*
	(systems+=System)*
	; 
		
		
System:
	'system' name=ID '{'
		('description' description=STRING ';')?
		(imports+=DefinitionImport)*
		(	
			dataTypes+=(Entity)
		)*
	'}'
	;
		
DefinitionImport:
	'import' definition=[Definition|FQN] ';'
	;
		
Definition:
	DataType;
	
	
Partition:
	Model | System
	;
		
CrossReferenceTarget:
		Definition
	|   Field
	
	;					
terminal DATE returns ecore::EDate: '0'..'9''0'..'9''0'..'9''0'..'9' '-' '0'..'9''0'..'9' '-' '0'..'9''0'..'9';
terminal INT returns ecore::EInt: ('-')? ('0'..'9')+;
terminal DECIMAL returns ecore::EBigDecimal: 
		'-'? ('0'..'9')+ '.' ('0'..'9')+;
      
FQN: // fully qualified name
	ID ('.' ID)*
	;

//
// Data Types
//
DataType:
	BuiltInType | Entity
	;

Entity :
	'entity' name=ID '{'
		('description' description=STRING ';')?
		(fields+=Field)* 
	'}'
	;

	
// Only instantiated "behind the scenes", i.e. no keyword, not called as a rule
BuiltInType:
	name=ID description=STRING
	;
		
Field : 
	name=ID ':' type=[DataType|FQN]
	(	('description' description=STRING ';')?
		('[' lower=INT ',' (upperUnlimited?='*' | upper=INT) ']' ';')?
		// default values: lower=1 and upper=1 set via PostProcessor
	|	';'
	)
	;